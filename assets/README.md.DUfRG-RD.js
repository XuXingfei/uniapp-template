import{_ as s,c as i,o as e,af as n}from"./chunks/framework.BZAhBqlD.js";const o=JSON.parse('{"title":"项目文档","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),l={name:"README.md"};function t(h,a,p,r,d,k){return e(),i("div",null,[...a[0]||(a[0]=[n(`<h1 id="项目文档" tabindex="-1">项目文档 <a class="header-anchor" href="#项目文档" aria-label="Permalink to “项目文档”">​</a></h1><p>这是 <code>uni-app-vue3-template</code> 项目的文档站点，基于 VitePress 构建。</p><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to “目录结构”">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├─.vitepress/    # VitePress 配置</span></span>
<span class="line"><span>├─guide/         # 使用指南</span></span>
<span class="line"><span>├─images/        # 文档图片</span></span>
<span class="line"><span>├─index.md       # 首页</span></span>
<span class="line"><span>└─README.md      # 此文件</span></span></code></pre></div><h2 id="开发命令" tabindex="-1">开发命令 <a class="header-anchor" href="#开发命令" aria-label="Permalink to “开发命令”">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动开发服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建文档站点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 预览构建结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:preview</span></span></code></pre></div><h2 id="文档内容" tabindex="-1">文档内容 <a class="header-anchor" href="#文档内容" aria-label="Permalink to “文档内容”">​</a></h2><ul><li><a href="./">首页</a> - 项目简介和快速预览</li><li><a href="./guide/start.html">快速开始</a> - 环境要求、安装和运行指南</li><li><a href="./guide/structure.html">项目结构说明</a> - 目录和文件详细说明</li><li>核心功能指南： <ul><li><a href="./guide/components.html">组件库</a> - uv-ui 和 IconPark 使用方法</li><li><a href="./guide/network.html">网络请求</a> - Promise 风格请求封装</li><li><a href="./guide/websocket.html">WebSocket</a> - 消息收发、心跳、重连实现</li><li><a href="./guide/theme.html">主题与样式</a> - CSS 变量主题方案</li><li><a href="./guide/loading.html">全局 Loading</a> - 自定义全局 Loading 使用</li><li><a href="./guide/utils.html">工具函数</a> - 常用工具函数示例</li></ul></li><li><a href="./guide/best-practice.html">最佳实践</a> - 开发建议和规范</li><li><a href="./guide/appendix.html">附录</a> - 插件链接、贡献指南等</li></ul><h2 id="贡献文档" tabindex="-1">贡献文档 <a class="header-anchor" href="#贡献文档" aria-label="Permalink to “贡献文档”">​</a></h2><p>欢迎提交 Pull Request 来改进文档内容。</p>`,10)])])}const g=s(l,[["render",t]]);export{o as __pageData,g as default};
