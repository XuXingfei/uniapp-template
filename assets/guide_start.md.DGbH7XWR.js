import{_ as s,c as a,o as l,af as e}from"./chunks/framework.DOCLS9hV.js";const c=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start.md","filePath":"guide/start.md"}'),h={name:"guide/start.md"};function n(t,i,k,p,r,d){return l(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to “快速开始”">​</a></h1><p>本指南将帮助你在几分钟内搭建并运行 <code>uni-app-vue3-template</code> 项目。</p><h2 id="环境要求" tabindex="-1">环境要求 <a class="header-anchor" href="#环境要求" aria-label="Permalink to “环境要求”">​</a></h2><p>开始之前请确认本地环境满足以下要求：</p><ul><li><strong>Node.js</strong>：v14.18+ 或 v16+（推荐 LTS 版本）</li><li><strong>包管理器</strong>：npm v6+ 或 yarn v1.22+（推荐 npm 8+）</li><li><strong>HBuilderX</strong>：最新版（可选，用于真机调试与打包）</li><li><strong>Git</strong>：用于获取项目代码</li></ul><h2 id="项目安装" tabindex="-1">项目安装 <a class="header-anchor" href="#项目安装" aria-label="Permalink to “项目安装”">​</a></h2><h3 id="_1-克隆项目-插件市场导入" tabindex="-1">1. 克隆项目/插件市场导入 <a class="header-anchor" href="#_1-克隆项目-插件市场导入" aria-label="Permalink to “1. 克隆项目/插件市场导入”">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">项目地址在右上</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">角</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni_template</span></span></code></pre></div><h3 id="_2-安装依赖" tabindex="-1">2. 安装依赖 <a class="header-anchor" href="#_2-安装依赖" aria-label="Permalink to “2. 安装依赖”">​</a></h3><p>使用 npm：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>或使用 yarn：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to “运行项目”">​</a></h2><h3 id="使用-hbuilderx" tabindex="-1">使用 HBuilderX <a class="header-anchor" href="#使用-hbuilderx" aria-label="Permalink to “使用 HBuilderX”">​</a></h3><ol><li>打开 HBuilderX，选择“文件 -&gt; 打开目录”，导入 <code>uni_template</code>。</li><li>在项目管理器中右键项目，选择“运行到浏览器”或“运行到微信小程序”等目标。</li><li>如需真机调试，选择“运行到手机或模拟器”，确保设备与 HBuilderX 处于同一局域网。</li></ol><h3 id="使用命令行-可选" tabindex="-1">使用命令行（可选） <a class="header-anchor" href="#使用命令行-可选" aria-label="Permalink to “使用命令行（可选）”">​</a></h3><p>项目默认通过 HBuilderX 调试。如需 CLI 方案，可安装官方脚手架：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @dcloudio/uni-app-cli</span></span></code></pre></div><p>常用启动命令示例：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># H5 调试</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:h5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 微信小程序调试</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:mp-weixin</span></span></code></pre></div><p>命令执行后会启动对应平台的开发服务器；首次运行会自动在 <code>unpackage/</code> 目录生成编译结果。</p><h2 id="构建发布" tabindex="-1">构建发布 <a class="header-anchor" href="#构建发布" aria-label="Permalink to “构建发布”">​</a></h2><h3 id="使用-hbuilderx-1" tabindex="-1">使用 HBuilderX <a class="header-anchor" href="#使用-hbuilderx-1" aria-label="Permalink to “使用 HBuilderX”">​</a></h3><ol><li>根据目标环境修改 <code>common/config.js</code> 中的域名、协议等配置。</li><li>在菜单中选择“发行 -&gt; 发行到网站-H5 / 小程序 / App”等目标，按向导完成打包。</li></ol><h3 id="使用命令行-可选-1" tabindex="-1">使用命令行（可选） <a class="header-anchor" href="#使用命令行-可选-1" aria-label="Permalink to “使用命令行（可选）”">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建 H5 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:h5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建微信小程序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:mp-weixin</span></span></code></pre></div><p>构建产物将输出至 <code>unpackage/</code> 目录，可直接提交至对应平台。</p><h2 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-label="Permalink to “配置说明”">​</a></h2><h3 id="网络请求配置" tabindex="-1">网络请求配置 <a class="header-anchor" href="#网络请求配置" aria-label="Permalink to “网络请求配置”">​</a></h3><p>在 <code>common/config.js</code> 中配置基础 URL、超时时间及不同环境的域名：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> baseUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://api.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> requestTimeout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10000</span></span></code></pre></div><h3 id="主题配置" tabindex="-1">主题配置 <a class="header-anchor" href="#主题配置" aria-label="Permalink to “主题配置”">​</a></h3><p>在 <code>common/themeStyle.js</code> 中维护主题变量：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> light</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;--theme-color&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#87ceeb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;--theme-bg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#87ceeb&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to “常见问题”">​</a></h2><h3 id="依赖安装失败" tabindex="-1">依赖安装失败 <a class="header-anchor" href="#依赖安装失败" aria-label="Permalink to “依赖安装失败”">​</a></h3><p>若安装依赖失败，可尝试清除缓存后重新安装：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-lock.json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn.lock</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="开发服务器启动失败" tabindex="-1">开发服务器启动失败 <a class="header-anchor" href="#开发服务器启动失败" aria-label="Permalink to “开发服务器启动失败”">​</a></h3><p>检查端口是否被占用：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ano</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> findstr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :8000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS/Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :8000</span></span></code></pre></div><h3 id="构建失败" tabindex="-1">构建失败 <a class="header-anchor" href="#构建失败" aria-label="Permalink to “构建失败”">​</a></h3><p>确认依赖已正确安装，并检查代码中是否出现语法错误或类型错误。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to “下一步”">​</a></h2><ul><li>查看 <a href="/guide/structure.html">项目结构说明</a> 了解目录组织</li><li>学习 <a href="/guide/components.html">核心功能</a> 的使用方式</li><li>阅读 <a href="/guide/best-practice.html">最佳实践</a> 提升开发效率</li><li>查阅 <a href="/guide/hooks.html">内置 Hooks 指南</a> 掌握常用逻辑封装</li></ul>`,46)])])}const o=s(h,[["render",n]]);export{c as __pageData,o as default};
